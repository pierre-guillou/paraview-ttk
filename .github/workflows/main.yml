# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branch-ignore:
      - '*'
    tags:
      - 'v*'
      - 'dev*'
      - '*.*.*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install Ubuntu dependencies
      run: |
        sudo apt update
        # ParaView dependencies
        sudo apt install -y \
          qt5-default \
          qttools5-dev \
          qtxmlpatterns5-dev-tools \
          libqt5x11extras5-dev \
          libqt5svg5-dev \
          dpkg-dev

    - name: Configure ParaView build
      run: |
        mkdir build && cd build
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr \
          -DPARAVIEW_PYTHON_SITE_PACKAGES_SUFFIX=lib/python3/dist-packages \
          $GITHUB_WORKSPACE

    - name: Build patched ParaView
      run: |
        cd build
        make -j$(nproc)

    - name: Create package
      run: |
        cd build
        cpack -G DEB

    - name: Update package informations
      run: |
        cd build
        # unpack deb package to access control file
        mkdir tmp
        dpkg-deb -x ttk-paraview.deb tmp
        dpkg-deb --control ttk-paraview.deb tmp/DEBIAN
        # modify control file, remove libgcc-s1 dependency
        sed 's/libgcc-s1[^,]*, //g' -i tmp/DEBIAN/control
        # build updated deb package
        dpkg -b tmp ttk-paraview.deb.new
        # replace old package with new
        mv ttk-paraview.deb.new ttk-paraview.deb

    - name: Upload .deb package
      uses: actions/upload-artifact@v2
      with:
        name: ttk-paraview-${{ matrix.os }}.deb
        path: build/ttk-paraview.deb

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install macOS dependencies
      run: |
        brew install --cask xquartz
        brew install wget libomp mesa glew boost qt ninja python

    - name: Configure ParaView build
      run: |
        # switch to Xcode 11 since Xcode 12 breaks the ParaView build
        sudo xcode-select -s "/Applications/Xcode_11.7.app"
        mkdir build && cd build
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/Applications \
          -DQt5_DIR=$(brew --prefix qt)/lib/cmake/Qt5 \
          -GNinja \
          $GITHUB_WORKSPACE

    - name: Build patched ParaView
      run: |
        cd build
        ninja

    - name: Create package
      run: |
        cd build
        cpack -G productbuild

    - name: Upload .pgk package
      uses: actions/upload-artifact@v2
      with:
        name: ttk-paraview.pkg
        path: build/ttk-paraview.pkg

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - uses: s-weigand/setup-conda@v1

    - name: Remove hosted Python
      shell: bash
      run: |
        rm -rf C:/hostedtoolcache/windows/Python

    - name: Install qt with conda
      shell: bash
      run: |
        conda install -c anaconda qt

    - name: Configure ParaView build
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        mkdir build
        cd build
        cmake ..

    - name: Build patched ParaView
      shell: bash
      run: |
        cd build
        cmake --build . --config Release --parallel

    - name: Create package
      shell: bash
      run: |
        cd build
        cpack -G NSIS64

    - name: Upload .exe installer
      uses: actions/upload-artifact@v2
      with:
        name: ttk-paraview.exe
        path: build/ttk-paraview.exe

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Fetch all uploaded artifacts
      uses: actions/download-artifact@v2

    - name: Upload Ubuntu Bionic .deb as Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: ${{ github.ref }}
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ttk-paraview-ubuntu-18.04.deb/ttk-paraview.deb
        asset_name: ttk-paraview-$tag-ubuntu-18.04.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload Ubuntu Focal .deb as Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: ${{ github.ref }}
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ttk-paraview-ubuntu-20.04.deb/ttk-paraview.deb
        asset_name: ttk-paraview-$tag-ubuntu-20.04.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload .pkg as Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: ${{ github.ref }}
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ttk-paraview.pkg/ttk-paraview.pkg
        asset_name: ttk-paraview-$tag.pkg
        asset_content_type: application/x-newton-compatible-pkg

    - name: Upload .exe as Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: ${{ github.ref }}
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ttk-paraview.exe/ttk-paraview.exe
        asset_name: ttk-paraview-$tag.exe
        asset_content_type: application/vnd.microsoft.portable-executable
