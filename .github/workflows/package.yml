name: packaging

on:
  push:
    branch-ignore:
      - '*'
    tags:
      - 'v?\d+.\d+.\d+'
      - 'dev*'
      - 'pack*'

jobs:

  # ------ #
  # Ubuntu #
  # ------ #
  build-ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    steps:
    - uses: actions/checkout@v2
      name: Checkout TTK-ParaView source code

    - name: Install Ubuntu dependencies
      run: |
        sudo apt update
        # TTK-ParaView dependencies
        sudo apt install -y \
          qtbase5-dev \
          qtchooser \
          qt5-qmake \
          qtbase5-dev-tools \
          qttools5-dev \
          qtxmlpatterns5-dev-tools \
          libqt5x11extras5-dev \
          libqt5svg5-dev \
          libgl1-mesa-dev \
          libxcursor-dev \
          ninja-build \
          dpkg-dev

    - name: Create & configure ParaView build directory
      run: |
        mkdir build && cd build
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr \
          -DPARAVIEW_PYTHON_SITE_PACKAGES_SUFFIX=lib/python3/dist-packages \
          -GNinja \
          $GITHUB_WORKSPACE

    - name: Build ParaView
      run: |
        cd build
        cmake --build . --parallel

    - name: Create ParaView package
      run: |
        cd build
        cpack -G DEB

    - name: Update package informations
      run: |
        cd build
        # unpack deb package to access control file
        mkdir tmp
        dpkg-deb -x ttk-paraview.deb tmp
        dpkg-deb --control ttk-paraview.deb tmp/DEBIAN
        # modify control file, remove libgcc-s1 dependency
        sed 's/libgcc-s1[^,]*, //g' -i tmp/DEBIAN/control
        # build updated deb package
        dpkg -b tmp ttk-paraview.deb.new
        # replace old package with new
        mv ttk-paraview.deb.new ttk-paraview.deb

    - name: Upload Debian package
      uses: actions/upload-artifact@v2
      with:
        name: ttk-paraview-${{ matrix.os }}
        path: build/ttk-paraview.deb


  # ----- #
  # macOS #
  # ----- #
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout TTK-ParaView source code

    - name: Remove hosted Python
      run: |
        sudo rm -rf /usr/local/Frameworks/Python.framework

    - name: Install macOS dependencies
      run: |
        # ParaView dependencies
        brew install --cask xquartz
        brew install wget libomp mesa glew boost qt@5 ninja python

    - name: Create & configure ParaView build directory
      run: |
        mkdir build && cd build
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/Applications \
          -DQt5_DIR=$(brew --prefix qt@5)/lib/cmake/Qt5 \
          -DPython3_ROOT_DIR=$(brew --prefix python) \
          -GNinja \
          $GITHUB_WORKSPACE

    - name: Build ParaView
      run: |
        cd build
        cmake --build . --parallel

    - name: Create ParaView package
      run: |
        cd build
        cpack -G productbuild

    - name: Upload .pgk package
      uses: actions/upload-artifact@v2
      with:
        name: ttk-paraview-macOS
        path: build/ttk-paraview.pkg


  # ------- #
  # Windows #
  # ------- #
  build-windows:
    runs-on: windows-2019
    env:
      CONDA_ROOT: C:\Miniconda
      VCVARS: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat

    steps:
    - uses: actions/checkout@v2
      name: Checkout TTK-ParaView source code

    - uses: s-weigand/setup-conda@v1

    - name: Install dependencies with conda
      shell: bash
      run: |
        conda install -c conda-forge qt ninja

    - name: Remove hosted Python
      shell: bash
      run: |
        rm -rf C:/hostedtoolcache/windows/Python

    - name: Create & configure ParaView build directory
      shell: cmd
      run: |
        call "%VCVARS%"
        cd ..
        mkdir b
        cd b
        cmake ^
          -DPython3_ROOT_DIR="%CONDA_ROOT%" ^
          -DCMAKE_BUILD_TYPE=Release ^
          -GNinja ^
          %GITHUB_WORKSPACE%

    - name: Build ParaView
      shell: cmd
      run: |
        call "%VCVARS%"
        cd ..\b
        cmake --build . --config Release --parallel

    - name: Create ParaView package
      shell: bash
      run: |
        cd ../b
        cpack -G NSIS64
        mv ttk-paraview.exe $GITHUB_WORKSPACE

    - name: Upload install executable
      uses: actions/upload-artifact@v2
      with:
        name: ttk-paraview-windows
        path: ttk-paraview.exe


  # --------------------- #
  # Upload release assets #
  # --------------------- #
  create-release:
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-macos, build-windows]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Fetch all uploaded artifacts
      uses: actions/download-artifact@v2

    - name: Upload Ubuntu Focal .deb as Release Asset
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: ttk-paraview-ubuntu-20.04/ttk-paraview.deb
        asset_name: ttk-paraview-$tag-ubuntu-20.04.deb

    - name: Upload Ubuntu Jammy .deb as Release Asset
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: ttk-paraview-ubuntu-22.04/ttk-paraview.deb
        asset_name: ttk-paraview-$tag-ubuntu-22.04.deb

    - name: Upload .pkg as Release Asset
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: ttk-paraview-macOS/ttk-paraview.pkg
        asset_name: ttk-paraview-$tag.pkg

    - name: Upload .exe as Release Asset
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: ttk-paraview-windows/ttk-paraview.exe
        asset_name: ttk-paraview-$tag.exe
