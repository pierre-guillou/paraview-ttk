<ServerManagerConfiguration>
  <ProxyGroup name="writers">
 <!-- ================================================================= -->
    <PWriterProxy class="vtkIOSSWriter"
                  name="IOSSWriter">
      <Documentation short_help="Write Exodus II files using IOSS.">
        Write Exodus files using IOSS library.
      </Documentation>

      <StringVectorProperty command="SetFileName"
                            name="FileName"
                            number_of_elements="1"
                            panel_visibility="never">
        <Documentation>The name of the file to be written.</Documentation>
      </StringVectorProperty>

      <InputProperty command="SetInputConnection"
                     panel_visibility="never"
                     name="Input">
        <DataTypeDomain composite_data_supported="1"
                        name="input_type">
          <DataType value="vtkCompositeDataSet" />
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <Documentation>The input filter/source whose output dataset is to
        written to the file.</Documentation>
      </InputProperty>

      <IntVectorProperty name="OffsetGlobalIds"
          command="SetOffsetGlobalIds"
          number_of_elements="1"
          default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Exodus wants global ids to start with 1, while VTK generally produces
          global ids starting with 0. Set this to true (default false), if the global
          ids are generated by VTK and hence start with 0. When writing to the output
          file, they will be offset by 1 to ensure the ids are valid exodus ids.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="PreserveInputEntityGroups"
          command="SetPreserveInputEntityGroups"
          number_of_elements="1"
          default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          If input is untransformed IOSS dataset, then the writer can preserve entity
          group classifications, such as element blocks, side sets etc. The same is
          not true if the input has been transformed e.g. through a clip filter. Thus
          flag is used to indicate whether the input has valid element
          classifications.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty name="DisplacementMagnitude"
          command="SetDisplacementMagnitude"
          number_of_elements="1"
          default_values="1.0">
        <DoubleRangeDomain name="range" min="0.0" />
        <Documentation>
          If input dataset has displacements pre-applied, setting the displacement
          magnitude to non-zero ensures that the point coordinates in the dataset are
          correctly transformed using the displacement field array, if present.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty name="MaximumTimeStepsPerFile"
          command="SetMaximumTimeStepsPerFile"
          number_of_elements="1"
          default_values="0">
        <IntRangeDomain name="range" min="0" />
        <Documentation>
          A debugging option, set this to non-zero positive number to save at most
          the specified number of timesteps in a single file before starting a new
          one. The writer may start new files (aka restarts) automatically if it
          determines that the mesh has changed. Defaults to 0 i.e.
          unlimited timesteps per file.
        </Documentation>
      </IntVectorProperty>

      <Hints>
        <WriterFactory extensions="exo" file_description="IOSS Exodus File" />
      </Hints>
      <!-- End of IOSSWriter -->
    </PWriterProxy>
    <!-- end of  "writers" -->
  </ProxyGroup>
</ServerManagerConfiguration>
